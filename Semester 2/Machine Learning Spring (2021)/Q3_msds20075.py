# -*- coding: utf-8 -*-
"""Q3_MSDS20075.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sPG_Z4t0CteUgDSd0qkembWtzYy7K70l
"""

from sklearn.datasets import load_boston
from sklearn import linear_model
from sklearn.svm import SVR
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.metrics import mean_squared_error as mse
from sklearn.preprocessing import StandardScaler

"""**2 Question 3**"""

np.random.seed(2017)
n= 100
trainX = np.random.rand(n)
trainY = 0.25 + 0.5*trainX + np.sqrt(0.1)*np.random.randn(n)
idx = np.random.randint(0,100,10)
trainY[idx] = trainY[idx] + np.random.randn(10)
plt.scatter(trainX, trainY)
plt.show()
trainX = trainX.reshape(len(trainX),1)
trainX = np.append( trainX,np.ones((len(trainX),1)), axis=1)
trainX, testX, trainY, testY = train_test_split(trainX, trainY, test_size = 0.2, 
                                                random_state=5)

""" **2.0.1  Part(A)**"""

# Best lambda = 0.0001
# Slope = 0.3050
# Intercept = 0.2395
# Traing Error = 0.0963
# Testing Error = 0.3440

"""**2.0.2  Part(B)**

"""

best_eps = 0
best_alpha = 0
err_tr = 1000
err_test =1000
sl, incpt = 0, 0

for eps  in np.linspace(1.0, 5, 20):
    for alpha in np.linspace(0.0001, 0.001, 20):
        reg = linear_model.HuberRegressor(epsilon=eps, alpha=alpha)
        reg.fit(trainX, trainY)

        # Best epilon = 3.7368
        # Best alpha = 0.0001
        # Slope = 0.2526
        # Intercept - 0.1513
        # training Error = 0.0963
        # testing Error 0.3440

best_eps = 0
best_c = 0
err_tr = 1000
err_test =1000
sl, incpt = 0, 0

for c in np.linscape(1.0, 2, 1):
  for eps in np.linspace(0.001, 1, 20):
    reg = SVR(C=c, epsilon=eps, kernel='linear')
    reg.fit(trainX,trainY)
    mse_tr = mse(trainY, predictions=reg.predict(trainX), got_pred=True)

      #  Best epsilon = 0.2639
      #  Best C =1.00
      #  Slope =  0.2605
      #  Intercept Error = 0.0963 
      #  Testing Error = 0.3439