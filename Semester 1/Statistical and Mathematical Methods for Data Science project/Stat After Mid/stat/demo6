{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "JUVXRA5MVdI3"
   },
   "source": [
    "# Demo 6 -  OLAP Cubes - Slicing and Dicing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gEfNzFrzVdKO"
   },
   "source": [
    "All the databases table in this demo are based on public database samples and transformations\n",
    "- `Sakila` is a sample database created by `MySql` [Link](https://dev.mysql.com/doc/sakila/en/sakila-structure.html)\n",
    "- The postgresql version of it is called `Pagila` [Link](https://github.com/devrimgunduz/pagila)\n",
    "- The facts and dimension tables design is based on O'Reilly's public dimensional modelling tutorial schema [Link](http://archive.oreilly.com/oreillyschool/courses/dba3/index.html)\n",
    "\n",
    "Start by creating and connecting to the database by running the cells below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3vq6mpklVdKb"
   },
   "source": [
    "### Connect to the local database where Pagila is loaded"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-02-11T17:33:34.685025Z",
     "start_time": "2019-02-11T17:33:34.514916Z"
    },
    "id": "-QKOtPyWVdKg",
    "outputId": "97674d48-0e9d-416e-998a-104f0c24f9ba"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "postgresql://postgres:12345678@127.0.0.1:5432/pagila2\n"
     ]
    }
   ],
   "source": [
    "import sql\n",
    "%load_ext sql\n",
    "\n",
    "DB_ENDPOINT = \"127.0.0.1\"\n",
    "DB = 'pagila2'\n",
    "DB_USER = 'postgres'\n",
    "DB_PASSWORD = '12345678'\n",
    "DB_PORT = '5432'\n",
    "\n",
    "# postgresql://username:password@host:port/database\n",
    "conn_string = \"postgresql://{}:{}@{}:{}/{}\" \\\n",
    "                        .format(DB_USER, DB_PASSWORD, DB_ENDPOINT, DB_PORT, DB)\n",
    "\n",
    "print(conn_string)\n",
    "%sql $conn_string"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MRNolpQtVdKs"
   },
   "source": [
    "### Star Schema"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "DU7bSYbQVdKu"
   },
   "source": [
    "<img src=\"pagila-star.png\" width=\"50%\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UPagEa62VdKw"
   },
   "source": [
    "# Start with a simple cube\n",
    "### Write a query that calculates the revenue (sales_amount) by day, rating, and city."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "V5KRSfy-VdKy",
    "outputId": "acaee960-f9b3-4dcc-f5e6-d513dc042bfa"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 63.9 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>784.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>730.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>683.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>667.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>646.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>635.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>593.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>587.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>538.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>521.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>499.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>495.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>488.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>R</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>472.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>466.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>465.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>456.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>455.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>451.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>447.01</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(30, 'PG-13', 'Lethbridge', Decimal('784.21')),\n",
       " (30, 'G', 'Lethbridge', Decimal('730.48')),\n",
       " (30, 'R', 'Lethbridge', Decimal('683.46')),\n",
       " (30, 'NC-17', 'Woodridge', Decimal('667.49')),\n",
       " (30, 'NC-17', 'Lethbridge', Decimal('646.51')),\n",
       " (30, 'PG-13', 'Woodridge', Decimal('635.48')),\n",
       " (30, 'PG', 'Woodridge', Decimal('593.57')),\n",
       " (30, 'G', 'Woodridge', Decimal('587.58')),\n",
       " (20, 'PG-13', 'Lethbridge', Decimal('538.93')),\n",
       " (30, 'PG', 'Lethbridge', Decimal('521.78')),\n",
       " (21, 'PG-13', 'Lethbridge', Decimal('499.92')),\n",
       " (30, 'R', 'Woodridge', Decimal('495.74')),\n",
       " (17, 'PG-13', 'Woodridge', Decimal('488.83')),\n",
       " (18, 'R', 'Woodridge', Decimal('472.95')),\n",
       " (18, 'PG-13', 'Lethbridge', Decimal('466.92')),\n",
       " (19, 'PG-13', 'Lethbridge', Decimal('465.87')),\n",
       " (19, 'NC-17', 'Woodridge', Decimal('456.98')),\n",
       " (28, 'PG-13', 'Lethbridge', Decimal('455.97')),\n",
       " (21, 'NC-17', 'Lethbridge', Decimal('451.95')),\n",
       " (18, 'NC-17', 'Lethbridge', Decimal('447.01'))]"
      ]
     },
     "execution_count": 2,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    d.day, \n",
    "    m.rating,\n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "GROUP BY (d.day, m.rating, s.city)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "p_8OvDMOVdK3"
   },
   "source": [
    "# TODO\n",
    "Write a query that calculates the revenue (sales_amount) by title, month and city. Remember to join with the appropriate dimension tables to replace the keys with the dimension labels. Sort by revenue in descending order and limit to the first 20 rows. The first few rows of your output should match the table below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 59 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>title</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>INNOCENT USUAL</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>60.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WONDERLAND CHRISTMAS</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>60.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>DAUGHTER MADIGAN</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>59.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PICKUP DRIVING</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>56.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>STRANGERS GRAFFITI</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>56.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HUSTLER PARTY</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>55.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WHALE BIKINI</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>55.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TYCOON GATHERING</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CALENDAR GUNFIGHT</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ZORRO ARK</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HEAD STRANGER</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>53.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VIDEOTAPE ARSENIC</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>53.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WIFE TURN</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>52.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SATURDAY LAMBS</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>52.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TITANS JERK</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>52.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MAIDEN HOME</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>51.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MIDSUMMER GROUNDHOG</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>50.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SATURDAY LAMBS</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>50.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HARRY IDAHO</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>50.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>GARDEN ISLAND</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>49.94</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('INNOCENT USUAL', 4, 'Woodridge', Decimal('60.93')),\n",
       " ('WONDERLAND CHRISTMAS', 4, 'Lethbridge', Decimal('60.92')),\n",
       " ('DAUGHTER MADIGAN', 3, 'Woodridge', Decimal('59.93')),\n",
       " ('PICKUP DRIVING', 4, 'Lethbridge', Decimal('56.92')),\n",
       " ('STRANGERS GRAFFITI', 4, 'Woodridge', Decimal('56.92')),\n",
       " ('HUSTLER PARTY', 4, 'Lethbridge', Decimal('55.94')),\n",
       " ('WHALE BIKINI', 4, 'Lethbridge', Decimal('55.93')),\n",
       " ('TYCOON GATHERING', 4, 'Lethbridge', Decimal('54.94')),\n",
       " ('CALENDAR GUNFIGHT', 4, 'Lethbridge', Decimal('54.93')),\n",
       " ('ZORRO ARK', 4, 'Lethbridge', Decimal('54.93')),\n",
       " ('HEAD STRANGER', 4, 'Lethbridge', Decimal('53.93')),\n",
       " ('VIDEOTAPE ARSENIC', 4, 'Lethbridge', Decimal('53.92')),\n",
       " ('WIFE TURN', 3, 'Woodridge', Decimal('52.94')),\n",
       " ('SATURDAY LAMBS', 4, 'Woodridge', Decimal('52.94')),\n",
       " ('TITANS JERK', 4, 'Lethbridge', Decimal('52.93')),\n",
       " ('MAIDEN HOME', 4, 'Lethbridge', Decimal('51.94')),\n",
       " ('MIDSUMMER GROUNDHOG', 4, 'Woodridge', Decimal('50.94')),\n",
       " ('SATURDAY LAMBS', 4, 'Lethbridge', Decimal('50.93')),\n",
       " ('HARRY IDAHO', 4, 'Lethbridge', Decimal('50.92')),\n",
       " ('GARDEN ISLAND', 3, 'Lethbridge', Decimal('49.94'))]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.title,\n",
    "    d.month, \n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "GROUP BY (m.title,d.month,s.city)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "cTJL-QMmVdK_",
    "outputId": "67604dd6-b696-4aac-8d2b-76e8ca780ff7"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>title</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CARIBBEAN LIBERTY</td>\n",
       "        <td>4</td>\n",
       "        <td>Ibirit</td>\n",
       "        <td>16.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>EAGLES PANKY</td>\n",
       "        <td>3</td>\n",
       "        <td>Datong</td>\n",
       "        <td>16.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>LUST LOCK</td>\n",
       "        <td>4</td>\n",
       "        <td>Coatzacoalcos</td>\n",
       "        <td>15.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>INNOCENT USUAL</td>\n",
       "        <td>2</td>\n",
       "        <td>Valparai</td>\n",
       "        <td>13.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>BREAKFAST GOLDFINGER</td>\n",
       "        <td>4</td>\n",
       "        <td>Ife</td>\n",
       "        <td>13.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VIRGIN DAISY</td>\n",
       "        <td>4</td>\n",
       "        <td>Cam Ranh</td>\n",
       "        <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TITANIC BOONDOCK</td>\n",
       "        <td>4</td>\n",
       "        <td>Sumqayit</td>\n",
       "        <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SLEEPLESS MONSOON</td>\n",
       "        <td>4</td>\n",
       "        <td>Fuyu</td>\n",
       "        <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TRAP GUYS</td>\n",
       "        <td>3</td>\n",
       "        <td>Usak</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SHOW LORD</td>\n",
       "        <td>1</td>\n",
       "        <td>Mannheim</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VIRTUAL SPOILERS</td>\n",
       "        <td>2</td>\n",
       "        <td>Arlington</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TIES HUNGER</td>\n",
       "        <td>3</td>\n",
       "        <td>Naju</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SCORPION APOLLO</td>\n",
       "        <td>3</td>\n",
       "        <td>Siegen</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MIDSUMMER GROUNDHOG</td>\n",
       "        <td>4</td>\n",
       "        <td>Szkesfehrvr</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>FLINTSTONES HAPPINESS</td>\n",
       "        <td>3</td>\n",
       "        <td>Pemalang</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MINE TITANS</td>\n",
       "        <td>4</td>\n",
       "        <td>Juiz de Fora</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SCORPION APOLLO</td>\n",
       "        <td>4</td>\n",
       "        <td>Osmaniye</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>STING PERSONAL</td>\n",
       "        <td>3</td>\n",
       "        <td>Belm</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>JERK PAYCHECK</td>\n",
       "        <td>3</td>\n",
       "        <td>Botshabelo</td>\n",
       "        <td>11.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>JET NEIGHBORS</td>\n",
       "        <td>4</td>\n",
       "        <td>Uluberia</td>\n",
       "        <td>11.98</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('CARIBBEAN LIBERTY', 4, 'Ibirit', Decimal('16.98')),\n",
       " ('EAGLES PANKY', 3, 'Datong', Decimal('16.98')),\n",
       " ('LUST LOCK', 4, 'Coatzacoalcos', Decimal('15.98')),\n",
       " ('INNOCENT USUAL', 2, 'Valparai', Decimal('13.98')),\n",
       " ('BREAKFAST GOLDFINGER', 4, 'Ife', Decimal('13.98')),\n",
       " ('VIRGIN DAISY', 4, 'Cam Ranh', Decimal('12.98')),\n",
       " ('TITANIC BOONDOCK', 4, 'Sumqayit', Decimal('12.98')),\n",
       " ('SLEEPLESS MONSOON', 4, 'Fuyu', Decimal('12.98')),\n",
       " ('TRAP GUYS', 3, 'Usak', Decimal('11.99')),\n",
       " ('SHOW LORD', 1, 'Mannheim', Decimal('11.99')),\n",
       " ('VIRTUAL SPOILERS', 2, 'Arlington', Decimal('11.99')),\n",
       " ('TIES HUNGER', 3, 'Naju', Decimal('11.99')),\n",
       " ('SCORPION APOLLO', 3, 'Siegen', Decimal('11.99')),\n",
       " ('MIDSUMMER GROUNDHOG', 4, 'Szkesfehrvr', Decimal('11.99')),\n",
       " ('FLINTSTONES HAPPINESS', 3, 'Pemalang', Decimal('11.99')),\n",
       " ('MINE TITANS', 4, 'Juiz de Fora', Decimal('11.99')),\n",
       " ('SCORPION APOLLO', 4, 'Osmaniye', Decimal('11.99')),\n",
       " ('STING PERSONAL', 3, 'Belm', Decimal('11.99')),\n",
       " ('JERK PAYCHECK', 3, 'Botshabelo', Decimal('11.98')),\n",
       " ('JET NEIGHBORS', 4, 'Uluberia', Decimal('11.98'))]"
      ]
     },
     "execution_count": 29,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "XgUwCOVRVdLB"
   },
   "source": [
    "## Slicing\n",
    "\n",
    "Slicing is the reduction of the dimensionality of a cube by 1 e.g. 3 dimensions to 2, fixing one of the dimensions to a single value. In the example above, we have a 3-dimensional cube on day, rating, and city."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "dq6fr7OrVdLE"
   },
   "source": [
    "`Write a query that reduces the dimensionality of the above example by limiting the results to only include movies with a rating of \"PG-13\". Sort by revenue in descending order and limit to the first 20 rows.`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "N2CtZ3goVdLH",
    "outputId": "7b41ea4b-a5a4-4424-fcfa-6075348460b9"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 36 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>784.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>635.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>538.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>499.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>488.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>466.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>465.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>455.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>27</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>444.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>430.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>428.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>29</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>414.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>391.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>27</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>374.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>368.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>368.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>362.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>22</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>347.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>29</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>326.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>310.30</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(30, 'PG-13', 'Lethbridge', Decimal('784.21')),\n",
       " (30, 'PG-13', 'Woodridge', Decimal('635.48')),\n",
       " (20, 'PG-13', 'Lethbridge', Decimal('538.93')),\n",
       " (21, 'PG-13', 'Lethbridge', Decimal('499.92')),\n",
       " (17, 'PG-13', 'Woodridge', Decimal('488.83')),\n",
       " (18, 'PG-13', 'Lethbridge', Decimal('466.92')),\n",
       " (19, 'PG-13', 'Lethbridge', Decimal('465.87')),\n",
       " (28, 'PG-13', 'Lethbridge', Decimal('455.97')),\n",
       " (27, 'PG-13', 'Woodridge', Decimal('444.90')),\n",
       " (19, 'PG-13', 'Woodridge', Decimal('430.01')),\n",
       " (18, 'PG-13', 'Woodridge', Decimal('428.93')),\n",
       " (29, 'PG-13', 'Lethbridge', Decimal('414.09')),\n",
       " (21, 'PG-13', 'Woodridge', Decimal('391.05')),\n",
       " (27, 'PG-13', 'Lethbridge', Decimal('374.14')),\n",
       " (28, 'PG-13', 'Woodridge', Decimal('368.12')),\n",
       " (17, 'PG-13', 'Lethbridge', Decimal('368.09')),\n",
       " (20, 'PG-13', 'Woodridge', Decimal('362.00')),\n",
       " (22, 'PG-13', 'Lethbridge', Decimal('347.18')),\n",
       " (29, 'PG-13', 'Woodridge', Decimal('326.18')),\n",
       " (1, 'PG-13', 'Lethbridge', Decimal('310.30'))]"
      ]
     },
     "execution_count": 30,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    d.day, \n",
    "    m.rating,\n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "WHERE m.rating = 'PG-13'\n",
    "GROUP BY (d.day, m.rating, s.city)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FQaN3PybVdLL"
   },
   "source": [
    "# TODO\n",
    "Write a query that calculates the revenue (sales_amount) by title, month and city and slice this cube by limiting the month dimension to contain only 4th month. Remember to join with the appropriate dimension tables to replace the keys with the dimension labels. Sort by revenue in descending order and limit to the first 20 rows. The first few rows of your output should match the table below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 40 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>title</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>INNOCENT USUAL</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>60.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WONDERLAND CHRISTMAS</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>60.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PICKUP DRIVING</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>56.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>STRANGERS GRAFFITI</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>56.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HUSTLER PARTY</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>55.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>WHALE BIKINI</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>55.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TYCOON GATHERING</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ZORRO ARK</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CALENDAR GUNFIGHT</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HEAD STRANGER</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>53.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VIDEOTAPE ARSENIC</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>53.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SATURDAY LAMBS</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>52.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TITANS JERK</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>52.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MAIDEN HOME</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>51.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MIDSUMMER GROUNDHOG</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>50.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SATURDAY LAMBS</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>50.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HARRY IDAHO</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>50.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HANOVER GALAXY</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>49.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>FLINTSTONES HAPPINESS</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>48.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>FOOL MOCKINGBIRD</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>48.93</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('INNOCENT USUAL', 4, 'Woodridge', Decimal('60.93')),\n",
       " ('WONDERLAND CHRISTMAS', 4, 'Lethbridge', Decimal('60.92')),\n",
       " ('PICKUP DRIVING', 4, 'Lethbridge', Decimal('56.92')),\n",
       " ('STRANGERS GRAFFITI', 4, 'Woodridge', Decimal('56.92')),\n",
       " ('HUSTLER PARTY', 4, 'Lethbridge', Decimal('55.94')),\n",
       " ('WHALE BIKINI', 4, 'Lethbridge', Decimal('55.93')),\n",
       " ('TYCOON GATHERING', 4, 'Lethbridge', Decimal('54.94')),\n",
       " ('ZORRO ARK', 4, 'Lethbridge', Decimal('54.93')),\n",
       " ('CALENDAR GUNFIGHT', 4, 'Lethbridge', Decimal('54.93')),\n",
       " ('HEAD STRANGER', 4, 'Lethbridge', Decimal('53.93')),\n",
       " ('VIDEOTAPE ARSENIC', 4, 'Lethbridge', Decimal('53.92')),\n",
       " ('SATURDAY LAMBS', 4, 'Woodridge', Decimal('52.94')),\n",
       " ('TITANS JERK', 4, 'Lethbridge', Decimal('52.93')),\n",
       " ('MAIDEN HOME', 4, 'Lethbridge', Decimal('51.94')),\n",
       " ('MIDSUMMER GROUNDHOG', 4, 'Woodridge', Decimal('50.94')),\n",
       " ('SATURDAY LAMBS', 4, 'Lethbridge', Decimal('50.93')),\n",
       " ('HARRY IDAHO', 4, 'Lethbridge', Decimal('50.92')),\n",
       " ('HANOVER GALAXY', 4, 'Woodridge', Decimal('49.92')),\n",
       " ('FLINTSTONES HAPPINESS', 4, 'Lethbridge', Decimal('48.94')),\n",
       " ('FOOL MOCKINGBIRD', 4, 'Lethbridge', Decimal('48.93'))]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.title,\n",
    "    d.month, \n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "WHERE d.month = 4\n",
    "GROUP BY (m.title,d.month,s.city)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "WjVQv27HVdLO",
    "outputId": "6d99458d-0c11-435d-9057-b559616bb704"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>title</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>CARIBBEAN LIBERTY</td>\n",
       "        <td>4</td>\n",
       "        <td>Ibirit</td>\n",
       "        <td>16.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>LUST LOCK</td>\n",
       "        <td>4</td>\n",
       "        <td>Coatzacoalcos</td>\n",
       "        <td>15.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>BREAKFAST GOLDFINGER</td>\n",
       "        <td>4</td>\n",
       "        <td>Ife</td>\n",
       "        <td>13.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SLEEPLESS MONSOON</td>\n",
       "        <td>4</td>\n",
       "        <td>Fuyu</td>\n",
       "        <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>TITANIC BOONDOCK</td>\n",
       "        <td>4</td>\n",
       "        <td>Sumqayit</td>\n",
       "        <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>VIRGIN DAISY</td>\n",
       "        <td>4</td>\n",
       "        <td>Cam Ranh</td>\n",
       "        <td>12.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MIDSUMMER GROUNDHOG</td>\n",
       "        <td>4</td>\n",
       "        <td>Szkesfehrvr</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MINE TITANS</td>\n",
       "        <td>4</td>\n",
       "        <td>Juiz de Fora</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>SCORPION APOLLO</td>\n",
       "        <td>4</td>\n",
       "        <td>Osmaniye</td>\n",
       "        <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>MODEL FISH</td>\n",
       "        <td>4</td>\n",
       "        <td>Brindisi</td>\n",
       "        <td>11.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>JET NEIGHBORS</td>\n",
       "        <td>4</td>\n",
       "        <td>Uluberia</td>\n",
       "        <td>11.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ISHTAR ROCKETEER</td>\n",
       "        <td>4</td>\n",
       "        <td>Ozamis</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>BRIGHT ENCOUNTERS</td>\n",
       "        <td>4</td>\n",
       "        <td>Allende</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>INNOCENT USUAL</td>\n",
       "        <td>4</td>\n",
       "        <td>Purnea (Purnia)</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>BILKO ANONYMOUS</td>\n",
       "        <td>4</td>\n",
       "        <td>Stockport</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>HUSTLER PARTY</td>\n",
       "        <td>4</td>\n",
       "        <td>Uijongbu</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>KING EVOLUTION</td>\n",
       "        <td>4</td>\n",
       "        <td>Nha Trang</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>FLINTSTONES HAPPINESS</td>\n",
       "        <td>4</td>\n",
       "        <td>Baku</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>BEHAVIOR RUNAWAY</td>\n",
       "        <td>4</td>\n",
       "        <td>Xintai</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>FLASH WARS</td>\n",
       "        <td>4</td>\n",
       "        <td>San Felipe de Puerto Plata</td>\n",
       "        <td>10.99</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('CARIBBEAN LIBERTY', 4, 'Ibirit', Decimal('16.98')),\n",
       " ('LUST LOCK', 4, 'Coatzacoalcos', Decimal('15.98')),\n",
       " ('BREAKFAST GOLDFINGER', 4, 'Ife', Decimal('13.98')),\n",
       " ('SLEEPLESS MONSOON', 4, 'Fuyu', Decimal('12.98')),\n",
       " ('TITANIC BOONDOCK', 4, 'Sumqayit', Decimal('12.98')),\n",
       " ('VIRGIN DAISY', 4, 'Cam Ranh', Decimal('12.98')),\n",
       " ('MIDSUMMER GROUNDHOG', 4, 'Szkesfehrvr', Decimal('11.99')),\n",
       " ('MINE TITANS', 4, 'Juiz de Fora', Decimal('11.99')),\n",
       " ('SCORPION APOLLO', 4, 'Osmaniye', Decimal('11.99')),\n",
       " ('MODEL FISH', 4, 'Brindisi', Decimal('11.98')),\n",
       " ('JET NEIGHBORS', 4, 'Uluberia', Decimal('11.98')),\n",
       " ('ISHTAR ROCKETEER', 4, 'Ozamis', Decimal('10.99')),\n",
       " ('BRIGHT ENCOUNTERS', 4, 'Allende', Decimal('10.99')),\n",
       " ('INNOCENT USUAL', 4, 'Purnea (Purnia)', Decimal('10.99')),\n",
       " ('BILKO ANONYMOUS', 4, 'Stockport', Decimal('10.99')),\n",
       " ('HUSTLER PARTY', 4, 'Uijongbu', Decimal('10.99')),\n",
       " ('KING EVOLUTION', 4, 'Nha Trang', Decimal('10.99')),\n",
       " ('FLINTSTONES HAPPINESS', 4, 'Baku', Decimal('10.99')),\n",
       " ('BEHAVIOR RUNAWAY', 4, 'Xintai', Decimal('10.99')),\n",
       " ('FLASH WARS', 4, 'San Felipe de Puerto Plata', Decimal('10.99'))]"
      ]
     },
     "execution_count": 32,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "D4vghhxIVdLR"
   },
   "source": [
    "## Dicing\n",
    "Dicing is creating a subcube with the same dimensionality but fewer values for  two or more dimensions. \n",
    "\n",
    "#### Write a query to create a subcube of the initial cube that includes moves with:\n",
    "* ratings of PG, PG-13 or G\n",
    "* in the city of Bellevue, Lancaster or Lethbridge\n",
    "* day equal to 1, 5, 10 or 15"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "wZHDD_3UVdLT",
    "outputId": "8262ead5-5e52-4105-f0ff-2d96fc458c7b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "12 rows affected.\n",
      "Wall time: 28 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>310.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>PG</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>296.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>207.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>PG</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>188.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>G</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>177.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>151.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>G</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>140.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>PG</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>140.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>G</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>110.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>52.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>PG</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>18.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>G</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>12.97</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 'PG-13', 'Lethbridge', Decimal('310.30')),\n",
       " (1, 'PG', 'Lethbridge', Decimal('296.30')),\n",
       " (10, 'PG-13', 'Lethbridge', Decimal('207.53')),\n",
       " (10, 'PG', 'Lethbridge', Decimal('188.54')),\n",
       " (1, 'G', 'Lethbridge', Decimal('177.58')),\n",
       " (15, 'PG-13', 'Lethbridge', Decimal('151.61')),\n",
       " (10, 'G', 'Lethbridge', Decimal('140.66')),\n",
       " (15, 'PG', 'Lethbridge', Decimal('140.65')),\n",
       " (15, 'G', 'Lethbridge', Decimal('110.73')),\n",
       " (5, 'PG-13', 'Lethbridge', Decimal('52.90')),\n",
       " (5, 'PG', 'Lethbridge', Decimal('18.96')),\n",
       " (5, 'G', 'Lethbridge', Decimal('12.97'))]"
      ]
     },
     "execution_count": 35,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    d.day, \n",
    "    m.rating,\n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "WHERE m.rating IN ('PG-13', 'PG','G')\n",
    "AND s.city IN ('Bellevue', 'Lancaster','Lethbridge')\n",
    "AND d.day IN (1, 5, 10, 15)\n",
    "GROUP BY (d.day, m.rating, s.city)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hRmeWKp6VdLX"
   },
   "source": [
    "# TODO\n",
    "Write a query to create a subcube that calculates the revenue (sales_amount) by rating, month and city with the following conditions.\n",
    "\n",
    "* in a month of 1,3,5\n",
    "* in a city of Tokat, Mukateve, Yingkou, Battambang, Lethbridge\n",
    "* ratings of PG, PG-13 or G\n",
    "\n",
    "Remember to join with the appropriate dimension tables to replace the keys with the dimension labels. Sort by revenue in descending order and limit to the first 20 rows. The first few rows of your output should match the table below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "9 rows affected.\n",
      "Wall time: 11.7 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rating</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2754.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2263.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>1922.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>608.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>478.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>393.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>63.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>32.87</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('PG-13', 3, 'Lethbridge', Decimal('2754.65')),\n",
       " ('PG', 3, 'Lethbridge', Decimal('2263.51')),\n",
       " ('G', 3, 'Lethbridge', Decimal('1922.41')),\n",
       " ('PG-13', 1, 'Lethbridge', Decimal('608.64')),\n",
       " ('G', 1, 'Lethbridge', Decimal('478.93')),\n",
       " ('PG', 1, 'Lethbridge', Decimal('393.99')),\n",
       " ('PG-13', 5, 'Lethbridge', Decimal('63.80')),\n",
       " ('G', 5, 'Lethbridge', Decimal('54.81')),\n",
       " ('PG', 5, 'Lethbridge', Decimal('32.87'))]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.rating,\n",
    "    d.month, \n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "WHERE d.month IN (1,3,5) \n",
    "AND m.rating IN ('PG-13', 'PG','G') \n",
    "AND s.city IN ('Tokat', 'Mukateve', 'Yingkou', 'Battambang', 'Lethbridge')\n",
    "GROUP BY (m.rating,d.month,s.city)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "exKh1FD5VdLZ",
    "outputId": "6ac38ce5-001e-4e3c-f17d-064f3fd3b8e2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "15 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rating</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Mukateve</td>\n",
       "        <td>25.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Yingkou</td>\n",
       "        <td>21.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Tokat</td>\n",
       "        <td>16.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Tokat</td>\n",
       "        <td>11.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Mukateve</td>\n",
       "        <td>11.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Mukateve</td>\n",
       "        <td>7.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Yingkou</td>\n",
       "        <td>7.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>Tokat</td>\n",
       "        <td>5.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>Battambang</td>\n",
       "        <td>5.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Mukateve</td>\n",
       "        <td>5.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Tokat</td>\n",
       "        <td>4.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Tokat</td>\n",
       "        <td>4.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Battambang</td>\n",
       "        <td>2.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Battambang</td>\n",
       "        <td>1.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>Battambang</td>\n",
       "        <td>0.00</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('G', 3, 'Mukateve', Decimal('25.94')),\n",
       " ('PG-13', 3, 'Yingkou', Decimal('21.94')),\n",
       " ('G', 3, 'Tokat', Decimal('16.96')),\n",
       " ('PG', 3, 'Tokat', Decimal('11.98')),\n",
       " ('PG', 3, 'Mukateve', Decimal('11.97')),\n",
       " ('PG', 1, 'Mukateve', Decimal('7.98')),\n",
       " ('PG', 3, 'Yingkou', Decimal('7.98')),\n",
       " ('G', 1, 'Tokat', Decimal('5.99')),\n",
       " ('PG-13', 5, 'Battambang', Decimal('5.98')),\n",
       " ('PG-13', 3, 'Mukateve', Decimal('5.98')),\n",
       " ('PG', 1, 'Tokat', Decimal('4.99')),\n",
       " ('PG-13', 3, 'Tokat', Decimal('4.99')),\n",
       " ('PG', 3, 'Battambang', Decimal('2.98')),\n",
       " ('PG', 1, 'Battambang', Decimal('1.99')),\n",
       " ('G', 5, 'Battambang', Decimal('0.00'))]"
      ]
     },
     "execution_count": 38,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "9MEzYjbiVdLd"
   },
   "source": [
    "# OLAP Cubes - Roll Up and Drill Down"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "uvAnLe14VdLf"
   },
   "source": [
    "## Roll-up\n",
    "- Stepping up the level of aggregation to a large grouping\n",
    "- e.g.`city` is summed as `country`\n",
    "\n",
    "Write a query that calculates revenue (sales_amount) by day, rating, and country. Sort the data by revenue in descending order, and limit the data to the top 20 results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "iXnhgD7oVdLj",
    "outputId": "28786d2b-823d-4dad-8670-013641fb0ad0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 69.1 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>China</td>\n",
       "        <td>169.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>India</td>\n",
       "        <td>156.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>India</td>\n",
       "        <td>153.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>China</td>\n",
       "        <td>146.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>China</td>\n",
       "        <td>145.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>India</td>\n",
       "        <td>143.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>India</td>\n",
       "        <td>137.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>India</td>\n",
       "        <td>135.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>China</td>\n",
       "        <td>131.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>India</td>\n",
       "        <td>128.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>India</td>\n",
       "        <td>121.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>PG</td>\n",
       "        <td>India</td>\n",
       "        <td>119.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>India</td>\n",
       "        <td>116.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>China</td>\n",
       "        <td>115.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>R</td>\n",
       "        <td>India</td>\n",
       "        <td>115.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>27</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>India</td>\n",
       "        <td>115.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>China</td>\n",
       "        <td>111.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>United States</td>\n",
       "        <td>109.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>China</td>\n",
       "        <td>108.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>India</td>\n",
       "        <td>101.79</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(30, 'G', 'China', Decimal('169.67')),\n",
       " (30, 'PG', 'India', Decimal('156.67')),\n",
       " (30, 'NC-17', 'India', Decimal('153.64')),\n",
       " (30, 'PG-13', 'China', Decimal('146.67')),\n",
       " (30, 'R', 'China', Decimal('145.66')),\n",
       " (30, 'R', 'India', Decimal('143.68')),\n",
       " (30, 'G', 'India', Decimal('137.67')),\n",
       " (18, 'NC-17', 'India', Decimal('135.75')),\n",
       " (30, 'PG', 'China', Decimal('131.72')),\n",
       " (21, 'PG-13', 'India', Decimal('128.74')),\n",
       " (18, 'PG-13', 'India', Decimal('121.72')),\n",
       " (18, 'PG', 'India', Decimal('119.76')),\n",
       " (30, 'PG-13', 'India', Decimal('116.72')),\n",
       " (21, 'NC-17', 'China', Decimal('115.77')),\n",
       " (21, 'R', 'India', Decimal('115.75')),\n",
       " (27, 'NC-17', 'India', Decimal('115.72')),\n",
       " (17, 'PG-13', 'China', Decimal('111.75')),\n",
       " (17, 'NC-17', 'United States', Decimal('109.76')),\n",
       " (30, 'NC-17', 'China', Decimal('108.77')),\n",
       " (20, 'PG-13', 'India', Decimal('101.79'))]"
      ]
     },
     "execution_count": 39,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "SELECT \n",
    "    d.day, \n",
    "    m.rating,\n",
    "    c.country,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimCustomer c ON c.customer_key = f.customer_key\n",
    "GROUP BY (d.day, m.rating, c.country)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "eBI_a2FoVdLm"
   },
   "source": [
    "# TODO\n",
    "Write a query that calculates revenue (sales_amount) by month (Rolling up from day to month), rating, and country. Sort the data by revenue in descending order, and limit the data to the top 20 results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "id": "Sbfd1Sk3VdLo",
    "outputId": "99c87094-bbdd-469b-f1e7-410946a88e41"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 24.4 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>month</th>\n",
       "        <th>rating</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Canada</td>\n",
       "        <td>3513.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Australia</td>\n",
       "        <td>3050.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>PG</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2948.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2889.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2879.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>R</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2789.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>PG</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2776.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2754.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>R</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2672.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2585.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>G</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2581.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2561.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2499.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>PG</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2494.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>G</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2458.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>R</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2396.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>R</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2386.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>PG</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2263.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>G</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2022.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>G</td>\n",
       "        <td>Canada</td>\n",
       "        <td>1922.41</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(4, 'PG-13', 'Canada', Decimal('3513.03')),\n",
       " (4, 'PG-13', 'Australia', Decimal('3050.73')),\n",
       " (4, 'PG', 'Australia', Decimal('2948.96')),\n",
       " (4, 'NC-17', 'Australia', Decimal('2889.10')),\n",
       " (4, 'NC-17', 'Canada', Decimal('2879.34')),\n",
       " (4, 'R', 'Australia', Decimal('2789.21')),\n",
       " (4, 'PG', 'Canada', Decimal('2776.49')),\n",
       " (3, 'PG-13', 'Canada', Decimal('2754.65')),\n",
       " (4, 'R', 'Canada', Decimal('2672.57')),\n",
       " (3, 'NC-17', 'Australia', Decimal('2585.91')),\n",
       " (4, 'G', 'Canada', Decimal('2581.96')),\n",
       " (3, 'PG-13', 'Australia', Decimal('2561.98')),\n",
       " (3, 'NC-17', 'Canada', Decimal('2499.12')),\n",
       " (3, 'PG', 'Australia', Decimal('2494.01')),\n",
       " (4, 'G', 'Australia', Decimal('2458.07')),\n",
       " (3, 'R', 'Australia', Decimal('2396.22')),\n",
       " (3, 'R', 'Canada', Decimal('2386.54')),\n",
       " (3, 'PG', 'Canada', Decimal('2263.51')),\n",
       " (3, 'G', 'Australia', Decimal('2022.21')),\n",
       " (3, 'G', 'Canada', Decimal('1922.41'))]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    d.month, \n",
    "    m.rating,\n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "GROUP BY (m.rating,d.month,s.country)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "bsnrVnpnVdLr"
   },
   "source": [
    "## Drill-down\n",
    "- Breaking up one of the dimensions to a lower level.\n",
    "- e.g.`city` is broken up into  `districts`\n",
    "\n",
    "Write a query that calculates revenue (sales_amount) by day, rating, and district. Sort the data by revenue in descending order, and limit the data to the top 20 results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "cg2SvxB4VdLt",
    "outputId": "cde5da1a-23ab-40a2-b8ac-8d8105ddec08"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 30 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>district</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Southern Tagalog</td>\n",
       "        <td>53.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>Inner Mongolia</td>\n",
       "        <td>38.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>Shandong</td>\n",
       "        <td>36.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>West Bengali</td>\n",
       "        <td>36.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Shandong</td>\n",
       "        <td>34.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>PG</td>\n",
       "        <td>California</td>\n",
       "        <td>32.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>So Paulo</td>\n",
       "        <td>32.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>R</td>\n",
       "        <td>So Paulo</td>\n",
       "        <td>31.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Buenos Aires</td>\n",
       "        <td>31.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>Southern Tagalog</td>\n",
       "        <td>30.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>So Paulo</td>\n",
       "        <td>30.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>Buenos Aires</td>\n",
       "        <td>30.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>Maharashtra</td>\n",
       "        <td>29.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>California</td>\n",
       "        <td>29.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Uttar Pradesh</td>\n",
       "        <td>29.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>PG</td>\n",
       "        <td>Shandong</td>\n",
       "        <td>29.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>R</td>\n",
       "        <td>Maharashtra</td>\n",
       "        <td>29.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>R</td>\n",
       "        <td>Sumy</td>\n",
       "        <td>28.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>Southern Tagalog</td>\n",
       "        <td>28.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>29</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>So Paulo</td>\n",
       "        <td>28.95</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(30, 'PG-13', 'Southern Tagalog', Decimal('53.88')),\n",
       " (30, 'G', 'Inner Mongolia', Decimal('38.93')),\n",
       " (30, 'G', 'Shandong', Decimal('36.93')),\n",
       " (30, 'NC-17', 'West Bengali', Decimal('36.92')),\n",
       " (17, 'PG-13', 'Shandong', Decimal('34.95')),\n",
       " (1, 'PG', 'California', Decimal('32.94')),\n",
       " (18, 'NC-17', 'So Paulo', Decimal('32.93')),\n",
       " (21, 'R', 'So Paulo', Decimal('31.93')),\n",
       " (30, 'NC-17', 'Buenos Aires', Decimal('31.93')),\n",
       " (30, 'PG', 'Southern Tagalog', Decimal('30.94')),\n",
       " (30, 'PG', 'So Paulo', Decimal('30.93')),\n",
       " (30, 'R', 'Buenos Aires', Decimal('30.92')),\n",
       " (18, 'NC-17', 'Maharashtra', Decimal('29.95')),\n",
       " (30, 'G', 'California', Decimal('29.95')),\n",
       " (21, 'PG-13', 'Uttar Pradesh', Decimal('29.94')),\n",
       " (20, 'PG', 'Shandong', Decimal('29.93')),\n",
       " (10, 'R', 'Maharashtra', Decimal('29.93')),\n",
       " (18, 'R', 'Sumy', Decimal('28.97')),\n",
       " (21, 'PG-13', 'Southern Tagalog', Decimal('28.96')),\n",
       " (29, 'NC-17', 'So Paulo', Decimal('28.95'))]"
      ]
     },
     "execution_count": 41,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "SELECT \n",
    "    d.day, \n",
    "    m.rating,\n",
    "    c.district,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimCustomer c ON c.customer_key = f.customer_key\n",
    "GROUP BY (d.day, m.rating, c.district)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "eqqtr0Z_VdLw"
   },
   "source": [
    "# TODO\n",
    "- Breaking up one of the dimensions to a lower level.\n",
    "- e.g.`district` is broken up into  `address`\n",
    "\n",
    "Write a query that calculates revenue (sales_amount) by day, rating, and address. Sort the data by revenue in descending order, and limit the data to the top 20 results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 28 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>address</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>784.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>730.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>683.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>667.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>646.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>635.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>593.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>587.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>538.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>521.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>499.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>495.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>488.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>R</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>472.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>466.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>465.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>28 MySQL Boulevard</td>\n",
       "        <td>456.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>455.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>451.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>47 MySakila Drive</td>\n",
       "        <td>447.01</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(30, 'PG-13', '47 MySakila Drive', Decimal('784.21')),\n",
       " (30, 'G', '47 MySakila Drive', Decimal('730.48')),\n",
       " (30, 'R', '47 MySakila Drive', Decimal('683.46')),\n",
       " (30, 'NC-17', '28 MySQL Boulevard', Decimal('667.49')),\n",
       " (30, 'NC-17', '47 MySakila Drive', Decimal('646.51')),\n",
       " (30, 'PG-13', '28 MySQL Boulevard', Decimal('635.48')),\n",
       " (30, 'PG', '28 MySQL Boulevard', Decimal('593.57')),\n",
       " (30, 'G', '28 MySQL Boulevard', Decimal('587.58')),\n",
       " (20, 'PG-13', '47 MySakila Drive', Decimal('538.93')),\n",
       " (30, 'PG', '47 MySakila Drive', Decimal('521.78')),\n",
       " (21, 'PG-13', '47 MySakila Drive', Decimal('499.92')),\n",
       " (30, 'R', '28 MySQL Boulevard', Decimal('495.74')),\n",
       " (17, 'PG-13', '28 MySQL Boulevard', Decimal('488.83')),\n",
       " (18, 'R', '28 MySQL Boulevard', Decimal('472.95')),\n",
       " (18, 'PG-13', '47 MySakila Drive', Decimal('466.92')),\n",
       " (19, 'PG-13', '47 MySakila Drive', Decimal('465.87')),\n",
       " (19, 'NC-17', '28 MySQL Boulevard', Decimal('456.98')),\n",
       " (28, 'PG-13', '47 MySakila Drive', Decimal('455.97')),\n",
       " (21, 'NC-17', '47 MySakila Drive', Decimal('451.95')),\n",
       " (18, 'NC-17', '47 MySakila Drive', Decimal('447.01'))]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    d.day, \n",
    "    m.rating,\n",
    "    s.address,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d  ON f.date_key  = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON s.store_key = f.store_key\n",
    "GROUP BY (d.day,m.rating,s.address)\n",
    "ORDER BY revenue DESC\n",
    "LIMIT 20;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "yw0XlZVbVdLy",
    "outputId": "c2b18623-99b2-4c77-d16c-335d3ecb524d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "20 rows affected.\n",
      "Wall time: 38 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>day</th>\n",
       "        <th>rating</th>\n",
       "        <th>address</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>1121 Loja Avenue</td>\n",
       "        <td>24.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>1749 Daxian Place</td>\n",
       "        <td>23.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>1163 London Parkway</td>\n",
       "        <td>22.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>R</td>\n",
       "        <td>64 Korla Street</td>\n",
       "        <td>21.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>1842 Luzinia Boulevard</td>\n",
       "        <td>21.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>G</td>\n",
       "        <td>18 Duisburg Boulevard</td>\n",
       "        <td>21.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>1838 Tabriz Lane</td>\n",
       "        <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>R</td>\n",
       "        <td>76 Kermanshah Manor</td>\n",
       "        <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>G</td>\n",
       "        <td>1447 Imus Place</td>\n",
       "        <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>22</td>\n",
       "        <td>R</td>\n",
       "        <td>962 Tama Loop</td>\n",
       "        <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>PG</td>\n",
       "        <td>1922 Miraj Way</td>\n",
       "        <td>19.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>R</td>\n",
       "        <td>1568 Celaya Parkway</td>\n",
       "        <td>19.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>G</td>\n",
       "        <td>505 Madiun Boulevard</td>\n",
       "        <td>18.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>28</td>\n",
       "        <td>PG</td>\n",
       "        <td>614 Denizli Parkway</td>\n",
       "        <td>18.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>29</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>1964 Gijn Manor</td>\n",
       "        <td>18.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>G</td>\n",
       "        <td>115 Hidalgo Parkway</td>\n",
       "        <td>18.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>NC-17</td>\n",
       "        <td>682 Garden Grove Place</td>\n",
       "        <td>18.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>30</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>270 Amroha Parkway</td>\n",
       "        <td>18.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>PG</td>\n",
       "        <td>1342 Sharja Way</td>\n",
       "        <td>18.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>PG-13</td>\n",
       "        <td>201 Effon-Alaiye Way</td>\n",
       "        <td>18.95</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(30, 'G', '1121 Loja Avenue', Decimal('24.97')),\n",
       " (30, 'NC-17', '1749 Daxian Place', Decimal('23.95')),\n",
       " (21, 'NC-17', '1163 London Parkway', Decimal('22.97')),\n",
       " (28, 'R', '64 Korla Street', Decimal('21.97')),\n",
       " (30, 'PG-13', '1842 Luzinia Boulevard', Decimal('21.97')),\n",
       " (21, 'G', '18 Duisburg Boulevard', Decimal('21.97')),\n",
       " (28, 'PG-13', '1838 Tabriz Lane', Decimal('19.97')),\n",
       " (1, 'R', '76 Kermanshah Manor', Decimal('19.97')),\n",
       " (17, 'G', '1447 Imus Place', Decimal('19.97')),\n",
       " (22, 'R', '962 Tama Loop', Decimal('19.97')),\n",
       " (19, 'PG', '1922 Miraj Way', Decimal('19.96')),\n",
       " (30, 'R', '1568 Celaya Parkway', Decimal('19.95')),\n",
       " (21, 'G', '505 Madiun Boulevard', Decimal('18.98')),\n",
       " (28, 'PG', '614 Denizli Parkway', Decimal('18.98')),\n",
       " (29, 'PG-13', '1964 Gijn Manor', Decimal('18.97')),\n",
       " (30, 'G', '115 Hidalgo Parkway', Decimal('18.97')),\n",
       " (1, 'NC-17', '682 Garden Grove Place', Decimal('18.97')),\n",
       " (30, 'PG-13', '270 Amroha Parkway', Decimal('18.97')),\n",
       " (19, 'PG', '1342 Sharja Way', Decimal('18.97')),\n",
       " (21, 'PG-13', '201 Effon-Alaiye Way', Decimal('18.95'))]"
      ]
     },
     "execution_count": 42,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "jU91wXWrVdL0"
   },
   "source": [
    "# OLAP Cubes - Grouping Sets"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "38Sq4cveVdL4"
   },
   "source": [
    "# Grouping Sets\n",
    "- It happens often that for 3 dimensions, you want to aggregate a fact:\n",
    "    - by nothing (total)\n",
    "    - then by the 1st dimension\n",
    "    - then by the 2nd \n",
    "    - then by the 3rd \n",
    "    - then by the 1st and 2nd\n",
    "    - then by the 2nd and 3rd\n",
    "    - then by the 1st and 3rd\n",
    "    - then by the 1st and 2nd and 3rd\n",
    "    \n",
    "- Since this is very common, and in all cases, we are iterating through all the fact table anyhow, there is a more clever way to do that using the SQL grouping statement \"GROUPING SETS\" "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3dz8whFjVdME"
   },
   "source": [
    "## Total Revenue\n",
    "\n",
    "TODO: Write a query that calculates total revenue (sales_amount)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "wRGQswJ9VdMG",
    "outputId": "69c0833a-259e-4524-dc9c-34a5ab6f49b0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>67416.51</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(Decimal('67416.51'),)]"
      ]
     },
     "execution_count": 7,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT sum(sales_amount) as revenue\n",
    "FROM factSales"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vhl86LLHVdMI"
   },
   "source": [
    "## Revenue by Country\n",
    "### Write a query that calculates total revenue (sales_amount) by country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "vvAuNJ5yVdML",
    "outputId": "8056cfc9-6c07-4d87-b7d8-236c203cb23f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "2 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Australia</td>\n",
       "        <td>33726.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Canada</td>\n",
       "        <td>33689.74</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('Australia', Decimal('33726.77')), ('Canada', Decimal('33689.74'))]"
      ]
     },
     "execution_count": 10,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT s.country, sum(sales_amount) as revenue\n",
    "FROM factSales f\n",
    "JOIN dimStore s ON f.store_key = s.store_key\n",
    "GROUP BY s.country\n",
    "ORDER BY s.country, revenue desc;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "B_xVDpYrVdMQ"
   },
   "source": [
    "## Revenue by Month\n",
    "TODO: Write a query that calculates total revenue (sales_amount) by month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "9_qPRGBDVdMS",
    "outputId": "34c9022b-3bcc-434c-a2bb-c64f0f88db26"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://student:***@127.0.0.1:5433/pagila\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>month</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>4824.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>9631.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>23886.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>28559.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>514.18</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, Decimal('4824.43')),\n",
       " (2, Decimal('9631.88')),\n",
       " (3, Decimal('23886.56')),\n",
       " (4, Decimal('28559.46')),\n",
       " (5, Decimal('514.18'))]"
      ]
     },
     "execution_count": 4,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT d.month, sum(sales_amount) as revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "GROUP BY d.month\n",
    "ORDER BY d.month, revenue desc;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Es8tukLgVdMU"
   },
   "source": [
    "# TODO\n",
    "#### Write a query that calculates total revenue (sales_amount) by rating"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "id": "Pfo80ZmOVdMW"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "5 rows affected.\n",
      "Wall time: 8 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rating</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>15259.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>13885.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>13337.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>13270.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>11664.23</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('PG-13', Decimal('15259.16')),\n",
       " ('NC-17', Decimal('13885.02')),\n",
       " ('PG', Decimal('13337.91')),\n",
       " ('R', Decimal('13270.19')),\n",
       " ('G', Decimal('11664.23'))]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.rating,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "GROUP BY (m.rating)\n",
    "ORDER BY revenue DESC"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "fcW0z41UVdMX"
   },
   "source": [
    "## Revenue by Month & Country\n",
    "TODO: Write a query that calculates total revenue (sales_amount) by month and country. Sort the data by month, country, and revenue in descending order. The first few rows of your output should match the table below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "qS00uuRxVdMc",
    "outputId": "077ba676-775b-421b-f4d3-4bc12fcc82b2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://student:***@127.0.0.1:5433/pagila\n",
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>month</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2364.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2460.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>4895.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>4736.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>12060.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>11826.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>14136.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>14423.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>271.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>243.10</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 'Australia', Decimal('2364.19')),\n",
       " (1, 'Canada', Decimal('2460.24')),\n",
       " (2, 'Australia', Decimal('4895.10')),\n",
       " (2, 'Canada', Decimal('4736.78')),\n",
       " (3, 'Australia', Decimal('12060.33')),\n",
       " (3, 'Canada', Decimal('11826.23')),\n",
       " (4, 'Australia', Decimal('14136.07')),\n",
       " (4, 'Canada', Decimal('14423.39')),\n",
       " (5, 'Australia', Decimal('271.08')),\n",
       " (5, 'Canada', Decimal('243.10'))]"
      ]
     },
     "execution_count": 5,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT d.month, s.country, sum(sales_amount) as revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "JOIN dimStore s ON f.store_key = s.store_key\n",
    "GROUP BY d.month, s.country\n",
    "ORDER BY d.month, s.country, revenue desc;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Z91U39NcVdMh"
   },
   "source": [
    "# TODO\n",
    "#### Write a query that calculates total revenue (sales_amount) by rating and month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "id": "I8eXhFixVdMj"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "25 rows affected.\n",
      "Wall time: 9 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rating</th>\n",
       "        <th>month</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>6563.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>5768.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>5725.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>5461.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>5316.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>5085.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>5040.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>4782.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>4757.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>3944.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>2162.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>2010.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>1910.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>1901.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>1647.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>1097.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>1007.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>932.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>927.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>858.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>118.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>113.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>104.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>94.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>82.71</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('PG-13', 4, Decimal('6563.76')),\n",
       " ('NC-17', 4, Decimal('5768.44')),\n",
       " ('PG', 4, Decimal('5725.45')),\n",
       " ('R', 4, Decimal('5461.78')),\n",
       " ('PG-13', 3, Decimal('5316.63')),\n",
       " ('NC-17', 3, Decimal('5085.03')),\n",
       " ('G', 4, Decimal('5040.03')),\n",
       " ('R', 3, Decimal('4782.76')),\n",
       " ('PG', 3, Decimal('4757.52')),\n",
       " ('G', 3, Decimal('3944.62')),\n",
       " ('PG-13', 2, Decimal('2162.83')),\n",
       " ('R', 2, Decimal('2010.21')),\n",
       " ('NC-17', 2, Decimal('1910.36')),\n",
       " ('PG', 2, Decimal('1901.41')),\n",
       " ('G', 2, Decimal('1647.07')),\n",
       " ('PG-13', 1, Decimal('1097.35')),\n",
       " ('NC-17', 1, Decimal('1007.63')),\n",
       " ('R', 1, Decimal('932.73')),\n",
       " ('G', 1, Decimal('927.88')),\n",
       " ('PG', 1, Decimal('858.84')),\n",
       " ('PG-13', 5, Decimal('118.59')),\n",
       " ('NC-17', 5, Decimal('113.56')),\n",
       " ('G', 5, Decimal('104.63')),\n",
       " ('PG', 5, Decimal('94.69')),\n",
       " ('R', 5, Decimal('82.71'))]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.rating,\n",
    "    d.month,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "GROUP BY (m.rating,d.month)\n",
    "ORDER BY revenue DESC"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MYYxfyFKVdMl"
   },
   "source": [
    "## Revenue Total, by Month, by Country, by Month & Country All in one shot\n",
    "\n",
    "TODO: Write a query that calculates total revenue at the various grouping levels done above (total, by month, by country, by month & country) all at once using the grouping sets function. Your output should match the table below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "JvC0qSrTVdMo",
    "outputId": "5c5f3a52-a3a8-43df-acf6-580b8d34573a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://student:***@127.0.0.1:5433/pagila\n",
      "18 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>month</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2364.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2460.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>4824.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>4895.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>4736.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>9631.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>12060.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>11826.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>23886.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>14136.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>14423.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>28559.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>271.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>243.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>514.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>67416.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>33689.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>33726.77</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 'Australia', Decimal('2364.19')),\n",
       " (1, 'Canada', Decimal('2460.24')),\n",
       " (1, None, Decimal('4824.43')),\n",
       " (2, 'Australia', Decimal('4895.10')),\n",
       " (2, 'Canada', Decimal('4736.78')),\n",
       " (2, None, Decimal('9631.88')),\n",
       " (3, 'Australia', Decimal('12060.33')),\n",
       " (3, 'Canada', Decimal('11826.23')),\n",
       " (3, None, Decimal('23886.56')),\n",
       " (4, 'Australia', Decimal('14136.07')),\n",
       " (4, 'Canada', Decimal('14423.39')),\n",
       " (4, None, Decimal('28559.46')),\n",
       " (5, 'Australia', Decimal('271.08')),\n",
       " (5, 'Canada', Decimal('243.10')),\n",
       " (5, None, Decimal('514.18')),\n",
       " (None, None, Decimal('67416.51')),\n",
       " (None, 'Canada', Decimal('33689.74')),\n",
       " (None, 'Australia', Decimal('33726.77'))]"
      ]
     },
     "execution_count": 6,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT d.month, s.country, sum(sales_amount) as revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "JOIN dimStore s ON f.store_key = s.store_key\n",
    "GROUP BY grouping sets ((), d.month, s.country, (d.month, s.country))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "s65hP5aSVdMr"
   },
   "source": [
    "# TODO\n",
    "#### Write a query that calculates total revenue (sales_amount) by rating, month and city"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "id": "8Wg2WSWSVdMt"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "108 rows affected.\n",
      "Wall time: 41 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rating</th>\n",
       "        <th>month</th>\n",
       "        <th>city</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>67416.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>33726.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>33689.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>28559.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>23886.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>15259.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>14423.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>14136.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>13885.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>13337.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>13270.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>12060.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>11826.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>11664.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>9631.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>None</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>8091.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>None</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>7167.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>None</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>6991.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>None</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>6958.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>None</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>6893.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>None</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>6755.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>6563.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>None</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>6514.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>None</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>6379.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>None</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>5854.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>None</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>5810.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5768.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5725.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5461.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>5316.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>5085.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5040.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>2</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>4895.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>4824.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>4782.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>4757.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>2</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>4736.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>3944.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>3513.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>3050.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2948.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2889.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2879.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2789.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2776.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2754.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2672.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2585.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2581.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2561.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2499.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2494.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2460.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2458.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2396.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2386.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2364.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>2263.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>2162.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>2022.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>2010.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>1922.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>1910.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>1901.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>1647.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>1151.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>1097.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>1049.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>1011.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>1007.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>988.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>970.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>960.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>939.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>932.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>927.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>912.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>874.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>858.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>772.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>608.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>528.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>514.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>488.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>482.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>478.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>478.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>464.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>449.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>448.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>393.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>5</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>271.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>243.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>118.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>113.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>104.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>94.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>82.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>66.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>63.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>61.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>54.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>54.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>49.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>46.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>44.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>Woodridge</td>\n",
       "        <td>37.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>Lethbridge</td>\n",
       "        <td>32.87</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(None, None, None, Decimal('67416.51')),\n",
       " (None, None, 'Woodridge', Decimal('33726.77')),\n",
       " (None, None, 'Lethbridge', Decimal('33689.74')),\n",
       " (None, 4, None, Decimal('28559.46')),\n",
       " (None, 3, None, Decimal('23886.56')),\n",
       " ('PG-13', None, None, Decimal('15259.16')),\n",
       " (None, 4, 'Lethbridge', Decimal('14423.39')),\n",
       " (None, 4, 'Woodridge', Decimal('14136.07')),\n",
       " ('NC-17', None, None, Decimal('13885.02')),\n",
       " ('PG', None, None, Decimal('13337.91')),\n",
       " ('R', None, None, Decimal('13270.19')),\n",
       " (None, 3, 'Woodridge', Decimal('12060.33')),\n",
       " (None, 3, 'Lethbridge', Decimal('11826.23')),\n",
       " ('G', None, None, Decimal('11664.23')),\n",
       " (None, 2, None, Decimal('9631.88')),\n",
       " ('PG-13', None, 'Lethbridge', Decimal('8091.51')),\n",
       " ('PG-13', None, 'Woodridge', Decimal('7167.65')),\n",
       " ('NC-17', None, 'Woodridge', Decimal('6991.29')),\n",
       " ('PG', None, 'Woodridge', Decimal('6958.25')),\n",
       " ('NC-17', None, 'Lethbridge', Decimal('6893.73')),\n",
       " ('R', None, 'Woodridge', Decimal('6755.57')),\n",
       " ('PG-13', 4, None, Decimal('6563.76')),\n",
       " ('R', None, 'Lethbridge', Decimal('6514.62')),\n",
       " ('PG', None, 'Lethbridge', Decimal('6379.66')),\n",
       " ('G', None, 'Woodridge', Decimal('5854.01')),\n",
       " ('G', None, 'Lethbridge', Decimal('5810.22')),\n",
       " ('NC-17', 4, None, Decimal('5768.44')),\n",
       " ('PG', 4, None, Decimal('5725.45')),\n",
       " ('R', 4, None, Decimal('5461.78')),\n",
       " ('PG-13', 3, None, Decimal('5316.63')),\n",
       " ('NC-17', 3, None, Decimal('5085.03')),\n",
       " ('G', 4, None, Decimal('5040.03')),\n",
       " (None, 2, 'Woodridge', Decimal('4895.10')),\n",
       " (None, 1, None, Decimal('4824.43')),\n",
       " ('R', 3, None, Decimal('4782.76')),\n",
       " ('PG', 3, None, Decimal('4757.52')),\n",
       " (None, 2, 'Lethbridge', Decimal('4736.78')),\n",
       " ('G', 3, None, Decimal('3944.62')),\n",
       " ('PG-13', 4, 'Lethbridge', Decimal('3513.03')),\n",
       " ('PG-13', 4, 'Woodridge', Decimal('3050.73')),\n",
       " ('PG', 4, 'Woodridge', Decimal('2948.96')),\n",
       " ('NC-17', 4, 'Woodridge', Decimal('2889.10')),\n",
       " ('NC-17', 4, 'Lethbridge', Decimal('2879.34')),\n",
       " ('R', 4, 'Woodridge', Decimal('2789.21')),\n",
       " ('PG', 4, 'Lethbridge', Decimal('2776.49')),\n",
       " ('PG-13', 3, 'Lethbridge', Decimal('2754.65')),\n",
       " ('R', 4, 'Lethbridge', Decimal('2672.57')),\n",
       " ('NC-17', 3, 'Woodridge', Decimal('2585.91')),\n",
       " ('G', 4, 'Lethbridge', Decimal('2581.96')),\n",
       " ('PG-13', 3, 'Woodridge', Decimal('2561.98')),\n",
       " ('NC-17', 3, 'Lethbridge', Decimal('2499.12')),\n",
       " ('PG', 3, 'Woodridge', Decimal('2494.01')),\n",
       " (None, 1, 'Lethbridge', Decimal('2460.24')),\n",
       " ('G', 4, 'Woodridge', Decimal('2458.07')),\n",
       " ('R', 3, 'Woodridge', Decimal('2396.22')),\n",
       " ('R', 3, 'Lethbridge', Decimal('2386.54')),\n",
       " (None, 1, 'Woodridge', Decimal('2364.19')),\n",
       " ('PG', 3, 'Lethbridge', Decimal('2263.51')),\n",
       " ('PG-13', 2, None, Decimal('2162.83')),\n",
       " ('G', 3, 'Woodridge', Decimal('2022.21')),\n",
       " ('R', 2, None, Decimal('2010.21')),\n",
       " ('G', 3, 'Lethbridge', Decimal('1922.41')),\n",
       " ('NC-17', 2, None, Decimal('1910.36')),\n",
       " ('PG', 2, None, Decimal('1901.41')),\n",
       " ('G', 2, None, Decimal('1647.07')),\n",
       " ('PG-13', 2, 'Lethbridge', Decimal('1151.39')),\n",
       " ('PG-13', 1, None, Decimal('1097.35')),\n",
       " ('R', 2, 'Woodridge', Decimal('1049.45')),\n",
       " ('PG-13', 2, 'Woodridge', Decimal('1011.44')),\n",
       " ('NC-17', 1, None, Decimal('1007.63')),\n",
       " ('PG', 2, 'Woodridge', Decimal('988.61')),\n",
       " ('NC-17', 2, 'Woodridge', Decimal('970.64')),\n",
       " ('R', 2, 'Lethbridge', Decimal('960.76')),\n",
       " ('NC-17', 2, 'Lethbridge', Decimal('939.72')),\n",
       " ('R', 1, None, Decimal('932.73')),\n",
       " ('G', 1, None, Decimal('927.88')),\n",
       " ('PG', 2, 'Lethbridge', Decimal('912.80')),\n",
       " ('G', 2, 'Woodridge', Decimal('874.96')),\n",
       " ('PG', 1, None, Decimal('858.84')),\n",
       " ('G', 2, 'Lethbridge', Decimal('772.11')),\n",
       " ('PG-13', 1, 'Lethbridge', Decimal('608.64')),\n",
       " ('NC-17', 1, 'Lethbridge', Decimal('528.76')),\n",
       " (None, 5, None, Decimal('514.18')),\n",
       " ('PG-13', 1, 'Woodridge', Decimal('488.71')),\n",
       " ('R', 1, 'Woodridge', Decimal('482.81')),\n",
       " ('G', 1, 'Lethbridge', Decimal('478.93')),\n",
       " ('NC-17', 1, 'Woodridge', Decimal('478.87')),\n",
       " ('PG', 1, 'Woodridge', Decimal('464.85')),\n",
       " ('R', 1, 'Lethbridge', Decimal('449.92')),\n",
       " ('G', 1, 'Woodridge', Decimal('448.95')),\n",
       " ('PG', 1, 'Lethbridge', Decimal('393.99')),\n",
       " (None, 5, 'Woodridge', Decimal('271.08')),\n",
       " (None, 5, 'Lethbridge', Decimal('243.10')),\n",
       " ('PG-13', 5, None, Decimal('118.59')),\n",
       " ('NC-17', 5, None, Decimal('113.56')),\n",
       " ('G', 5, None, Decimal('104.63')),\n",
       " ('PG', 5, None, Decimal('94.69')),\n",
       " ('R', 5, None, Decimal('82.71')),\n",
       " ('NC-17', 5, 'Woodridge', Decimal('66.77')),\n",
       " ('PG-13', 5, 'Lethbridge', Decimal('63.80')),\n",
       " ('PG', 5, 'Woodridge', Decimal('61.82')),\n",
       " ('G', 5, 'Lethbridge', Decimal('54.81')),\n",
       " ('PG-13', 5, 'Woodridge', Decimal('54.79')),\n",
       " ('G', 5, 'Woodridge', Decimal('49.82')),\n",
       " ('NC-17', 5, 'Lethbridge', Decimal('46.79')),\n",
       " ('R', 5, 'Lethbridge', Decimal('44.83')),\n",
       " ('R', 5, 'Woodridge', Decimal('37.88')),\n",
       " ('PG', 5, 'Lethbridge', Decimal('32.87'))]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.rating,\n",
    "    d.month,\n",
    "    s.city,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON f.store_key = s.store_key\n",
    "GROUP BY grouping sets ((),m.rating, d.month, s.city,(m.rating,d.month),(m.rating,s.city),(d.month, s.city),(m.rating,d.month, s.city))\n",
    "ORDER BY revenue DESC"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "aZU8JQiqVdMw"
   },
   "source": [
    "# CUBE \n",
    "- Group by CUBE (dim1, dim2, ..) , produces all combinations of different lenghts in one go.\n",
    "- This view could be materialized in a view and queried which would save lots repetitive aggregations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ENYjmkN2VdMy"
   },
   "source": [
    "TODO: Write a query that calculates the various levels of aggregation done in the grouping sets exercise (total, by month, by country, by month & country) using the CUBE function. Your output should match the table below.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "_RO4HsunVdNH",
    "outputId": "0b846202-1a51-40c7-bffb-c73eb676684c"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "18 rows affected.\n",
      "Wall time: 45.2 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>month</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>4824.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2460.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2364.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>9631.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>4736.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>4895.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>23886.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>11826.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>12060.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>28559.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>14423.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>14136.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>514.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>243.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>271.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>67416.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>33689.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>33726.77</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, None, Decimal('4824.43')),\n",
       " (1, 'Canada', Decimal('2460.24')),\n",
       " (1, 'Australia', Decimal('2364.19')),\n",
       " (2, None, Decimal('9631.88')),\n",
       " (2, 'Canada', Decimal('4736.78')),\n",
       " (2, 'Australia', Decimal('4895.10')),\n",
       " (3, None, Decimal('23886.56')),\n",
       " (3, 'Canada', Decimal('11826.23')),\n",
       " (3, 'Australia', Decimal('12060.33')),\n",
       " (4, None, Decimal('28559.46')),\n",
       " (4, 'Canada', Decimal('14423.39')),\n",
       " (4, 'Australia', Decimal('14136.07')),\n",
       " (5, None, Decimal('514.18')),\n",
       " (5, 'Canada', Decimal('243.10')),\n",
       " (5, 'Australia', Decimal('271.08')),\n",
       " (None, None, Decimal('67416.51')),\n",
       " (None, 'Canada', Decimal('33689.74')),\n",
       " (None, 'Australia', Decimal('33726.77'))]"
      ]
     },
     "execution_count": 47,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "SELECT d.month, s.country, sum(sales_amount) as revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "JOIN dimStore s ON f.store_key = s.store_key\n",
    "GROUP BY CUBE (d.month, s.country)\n",
    "ORDER BY month,country DESC;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hZR8nZu6VdNj"
   },
   "source": [
    "## Revenue Total, by Month, by Country, by Month & Country All in one shot, NAIVE way\n",
    "The naive way to create the same table as above is to write several queries and UNION them together. Grouping sets and cubes produce queries that are shorter to write, easier to read, and more performant. Run the naive query below and compare the time it takes to run to the time it takes the cube query to run."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "l9-TQtWWVdNl",
    "outputId": "341fedc6-cc4b-455c-a45f-ae312c33f86f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "18 rows affected.\n",
      "Wall time: 56.9 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>month</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>67416.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>33689.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>33726.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>23886.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>514.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>28559.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>9631.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>4824.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2364.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2460.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>4895.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>4736.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>12060.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>11826.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>14136.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>14423.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>271.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>243.10</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(None, None, Decimal('67416.51')),\n",
       " (None, 'Canada', Decimal('33689.74')),\n",
       " (None, 'Australia', Decimal('33726.77')),\n",
       " ('3', None, Decimal('23886.56')),\n",
       " ('5', None, Decimal('514.18')),\n",
       " ('4', None, Decimal('28559.46')),\n",
       " ('2', None, Decimal('9631.88')),\n",
       " ('1', None, Decimal('4824.43')),\n",
       " ('1', 'Australia', Decimal('2364.19')),\n",
       " ('1', 'Canada', Decimal('2460.24')),\n",
       " ('2', 'Australia', Decimal('4895.10')),\n",
       " ('2', 'Canada', Decimal('4736.78')),\n",
       " ('3', 'Australia', Decimal('12060.33')),\n",
       " ('3', 'Canada', Decimal('11826.23')),\n",
       " ('4', 'Australia', Decimal('14136.07')),\n",
       " ('4', 'Canada', Decimal('14423.39')),\n",
       " ('5', 'Australia', Decimal('271.08')),\n",
       " ('5', 'Canada', Decimal('243.10'))]"
      ]
     },
     "execution_count": 12,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "SELECT  NULL as month, NULL as country, sum(sales_amount) as revenue\n",
    "FROM factSales\n",
    "    UNION all \n",
    "SELECT NULL, dimStore.country,sum(sales_amount) as revenue\n",
    "FROM factSales\n",
    "JOIN dimStore on (dimStore.store_key = factSales.store_key)\n",
    "GROUP by  dimStore.country\n",
    "    UNION all \n",
    "SELECT cast(dimDate.month as text) , NULL, sum(sales_amount) as revenue\n",
    "FROM factSales\n",
    "JOIN dimDate on (dimDate.date_key = factSales.date_key)\n",
    "GROUP by dimDate.month\n",
    "    UNION all\n",
    "SELECT cast(dimDate.month as text),dimStore.country,sum(sales_amount) as revenue\n",
    "FROM factSales\n",
    "JOIN dimDate     on (dimDate.date_key         = factSales.date_key)\n",
    "JOIN dimStore on (dimStore.store_key = factSales.store_key)\n",
    "GROUP by (dimDate.month, dimStore.country)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "RLDButdvVdNp"
   },
   "source": [
    "# TODO\n",
    "#### Write a query that calculates total revenue (sales_amount) by rating,month and country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "id": "p6T3EJ8qVdNs"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * postgresql://postgres:***@127.0.0.1:5432/pagila2\n",
      "108 rows affected.\n",
      "Wall time: 42 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>rating</th>\n",
       "        <th>month</th>\n",
       "        <th>country</th>\n",
       "        <th>revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>67416.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>33726.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>33689.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>28559.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>23886.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>15259.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>14423.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>14136.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>13885.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>13337.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>13270.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>12060.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>11826.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>11664.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>9631.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>8091.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>7167.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>6991.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>6958.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>6893.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>6755.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>6563.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>6514.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>6379.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>None</td>\n",
       "        <td>Australia</td>\n",
       "        <td>5854.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>None</td>\n",
       "        <td>Canada</td>\n",
       "        <td>5810.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5768.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5725.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5461.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>5316.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>5085.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>None</td>\n",
       "        <td>5040.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>4895.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>4824.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>4782.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>4757.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>4736.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>None</td>\n",
       "        <td>3944.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>3513.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>3050.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2948.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2889.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2879.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2789.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2776.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2754.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2672.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2585.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2581.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2561.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2499.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2494.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2460.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>4</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2458.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2396.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2386.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2364.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>2263.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>2162.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Australia</td>\n",
       "        <td>2022.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>2010.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>3</td>\n",
       "        <td>Canada</td>\n",
       "        <td>1922.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>1910.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>1901.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>1647.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>1151.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>1097.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>1049.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>1011.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>1007.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>988.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>970.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>960.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>939.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>932.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>927.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>912.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>Australia</td>\n",
       "        <td>874.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>858.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>2</td>\n",
       "        <td>Canada</td>\n",
       "        <td>772.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>608.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>528.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>514.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>488.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>482.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>478.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>478.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>464.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>449.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>1</td>\n",
       "        <td>Australia</td>\n",
       "        <td>448.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>1</td>\n",
       "        <td>Canada</td>\n",
       "        <td>393.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>271.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>243.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>118.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>113.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>104.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>94.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>None</td>\n",
       "        <td>82.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>66.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>63.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>61.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>54.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG-13</td>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>54.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>G</td>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>49.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>NC-17</td>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>46.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>44.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>R</td>\n",
       "        <td>5</td>\n",
       "        <td>Australia</td>\n",
       "        <td>37.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>PG</td>\n",
       "        <td>5</td>\n",
       "        <td>Canada</td>\n",
       "        <td>32.87</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(None, None, None, Decimal('67416.51')),\n",
       " (None, None, 'Australia', Decimal('33726.77')),\n",
       " (None, None, 'Canada', Decimal('33689.74')),\n",
       " (None, 4, None, Decimal('28559.46')),\n",
       " (None, 3, None, Decimal('23886.56')),\n",
       " ('PG-13', None, None, Decimal('15259.16')),\n",
       " (None, 4, 'Canada', Decimal('14423.39')),\n",
       " (None, 4, 'Australia', Decimal('14136.07')),\n",
       " ('NC-17', None, None, Decimal('13885.02')),\n",
       " ('PG', None, None, Decimal('13337.91')),\n",
       " ('R', None, None, Decimal('13270.19')),\n",
       " (None, 3, 'Australia', Decimal('12060.33')),\n",
       " (None, 3, 'Canada', Decimal('11826.23')),\n",
       " ('G', None, None, Decimal('11664.23')),\n",
       " (None, 2, None, Decimal('9631.88')),\n",
       " ('PG-13', None, 'Canada', Decimal('8091.51')),\n",
       " ('PG-13', None, 'Australia', Decimal('7167.65')),\n",
       " ('NC-17', None, 'Australia', Decimal('6991.29')),\n",
       " ('PG', None, 'Australia', Decimal('6958.25')),\n",
       " ('NC-17', None, 'Canada', Decimal('6893.73')),\n",
       " ('R', None, 'Australia', Decimal('6755.57')),\n",
       " ('PG-13', 4, None, Decimal('6563.76')),\n",
       " ('R', None, 'Canada', Decimal('6514.62')),\n",
       " ('PG', None, 'Canada', Decimal('6379.66')),\n",
       " ('G', None, 'Australia', Decimal('5854.01')),\n",
       " ('G', None, 'Canada', Decimal('5810.22')),\n",
       " ('NC-17', 4, None, Decimal('5768.44')),\n",
       " ('PG', 4, None, Decimal('5725.45')),\n",
       " ('R', 4, None, Decimal('5461.78')),\n",
       " ('PG-13', 3, None, Decimal('5316.63')),\n",
       " ('NC-17', 3, None, Decimal('5085.03')),\n",
       " ('G', 4, None, Decimal('5040.03')),\n",
       " (None, 2, 'Australia', Decimal('4895.10')),\n",
       " (None, 1, None, Decimal('4824.43')),\n",
       " ('R', 3, None, Decimal('4782.76')),\n",
       " ('PG', 3, None, Decimal('4757.52')),\n",
       " (None, 2, 'Canada', Decimal('4736.78')),\n",
       " ('G', 3, None, Decimal('3944.62')),\n",
       " ('PG-13', 4, 'Canada', Decimal('3513.03')),\n",
       " ('PG-13', 4, 'Australia', Decimal('3050.73')),\n",
       " ('PG', 4, 'Australia', Decimal('2948.96')),\n",
       " ('NC-17', 4, 'Australia', Decimal('2889.10')),\n",
       " ('NC-17', 4, 'Canada', Decimal('2879.34')),\n",
       " ('R', 4, 'Australia', Decimal('2789.21')),\n",
       " ('PG', 4, 'Canada', Decimal('2776.49')),\n",
       " ('PG-13', 3, 'Canada', Decimal('2754.65')),\n",
       " ('R', 4, 'Canada', Decimal('2672.57')),\n",
       " ('NC-17', 3, 'Australia', Decimal('2585.91')),\n",
       " ('G', 4, 'Canada', Decimal('2581.96')),\n",
       " ('PG-13', 3, 'Australia', Decimal('2561.98')),\n",
       " ('NC-17', 3, 'Canada', Decimal('2499.12')),\n",
       " ('PG', 3, 'Australia', Decimal('2494.01')),\n",
       " (None, 1, 'Canada', Decimal('2460.24')),\n",
       " ('G', 4, 'Australia', Decimal('2458.07')),\n",
       " ('R', 3, 'Australia', Decimal('2396.22')),\n",
       " ('R', 3, 'Canada', Decimal('2386.54')),\n",
       " (None, 1, 'Australia', Decimal('2364.19')),\n",
       " ('PG', 3, 'Canada', Decimal('2263.51')),\n",
       " ('PG-13', 2, None, Decimal('2162.83')),\n",
       " ('G', 3, 'Australia', Decimal('2022.21')),\n",
       " ('R', 2, None, Decimal('2010.21')),\n",
       " ('G', 3, 'Canada', Decimal('1922.41')),\n",
       " ('NC-17', 2, None, Decimal('1910.36')),\n",
       " ('PG', 2, None, Decimal('1901.41')),\n",
       " ('G', 2, None, Decimal('1647.07')),\n",
       " ('PG-13', 2, 'Canada', Decimal('1151.39')),\n",
       " ('PG-13', 1, None, Decimal('1097.35')),\n",
       " ('R', 2, 'Australia', Decimal('1049.45')),\n",
       " ('PG-13', 2, 'Australia', Decimal('1011.44')),\n",
       " ('NC-17', 1, None, Decimal('1007.63')),\n",
       " ('PG', 2, 'Australia', Decimal('988.61')),\n",
       " ('NC-17', 2, 'Australia', Decimal('970.64')),\n",
       " ('R', 2, 'Canada', Decimal('960.76')),\n",
       " ('NC-17', 2, 'Canada', Decimal('939.72')),\n",
       " ('R', 1, None, Decimal('932.73')),\n",
       " ('G', 1, None, Decimal('927.88')),\n",
       " ('PG', 2, 'Canada', Decimal('912.80')),\n",
       " ('G', 2, 'Australia', Decimal('874.96')),\n",
       " ('PG', 1, None, Decimal('858.84')),\n",
       " ('G', 2, 'Canada', Decimal('772.11')),\n",
       " ('PG-13', 1, 'Canada', Decimal('608.64')),\n",
       " ('NC-17', 1, 'Canada', Decimal('528.76')),\n",
       " (None, 5, None, Decimal('514.18')),\n",
       " ('PG-13', 1, 'Australia', Decimal('488.71')),\n",
       " ('R', 1, 'Australia', Decimal('482.81')),\n",
       " ('G', 1, 'Canada', Decimal('478.93')),\n",
       " ('NC-17', 1, 'Australia', Decimal('478.87')),\n",
       " ('PG', 1, 'Australia', Decimal('464.85')),\n",
       " ('R', 1, 'Canada', Decimal('449.92')),\n",
       " ('G', 1, 'Australia', Decimal('448.95')),\n",
       " ('PG', 1, 'Canada', Decimal('393.99')),\n",
       " (None, 5, 'Australia', Decimal('271.08')),\n",
       " (None, 5, 'Canada', Decimal('243.10')),\n",
       " ('PG-13', 5, None, Decimal('118.59')),\n",
       " ('NC-17', 5, None, Decimal('113.56')),\n",
       " ('G', 5, None, Decimal('104.63')),\n",
       " ('PG', 5, None, Decimal('94.69')),\n",
       " ('R', 5, None, Decimal('82.71')),\n",
       " ('NC-17', 5, 'Australia', Decimal('66.77')),\n",
       " ('PG-13', 5, 'Canada', Decimal('63.80')),\n",
       " ('PG', 5, 'Australia', Decimal('61.82')),\n",
       " ('G', 5, 'Canada', Decimal('54.81')),\n",
       " ('PG-13', 5, 'Australia', Decimal('54.79')),\n",
       " ('G', 5, 'Australia', Decimal('49.82')),\n",
       " ('NC-17', 5, 'Canada', Decimal('46.79')),\n",
       " ('R', 5, 'Canada', Decimal('44.83')),\n",
       " ('R', 5, 'Australia', Decimal('37.88')),\n",
       " ('PG', 5, 'Canada', Decimal('32.87'))]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "%%sql\n",
    "\n",
    "SELECT \n",
    "    m.rating,\n",
    "    d.month,\n",
    "    s.country,\n",
    "    sum(f.sales_amount) AS revenue\n",
    "FROM factSales f\n",
    "JOIN dimDate d ON f.date_key = d.date_key\n",
    "JOIN dimMovie m ON m.movie_key = f.movie_key\n",
    "JOIN dimStore s ON f.store_key = s.store_key\n",
    "GROUP BY CUBE (m.rating,d.month, s.country)\n",
    "ORDER BY revenue DESC"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "name": "Demo_6.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
